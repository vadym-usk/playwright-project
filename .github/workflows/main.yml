name: Run Playwright tests with Allure in Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  playwright-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - env: TEST
            BASE_URL: ${{ secrets.BASE_URL_TEST }}
            USERNAME: ${{ secrets.USERNAME_TEST }}
            PASSWORD: ${{ secrets.PASSWORD_TEST }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üßπ Clean previous allure-results
        run: rm -rf allure-results allure-report*

      - name: üê≥ Build Docker Image
        run: docker build -t playwright-tests .

      - name: üöÄ Run Playwright tests for ${{ matrix.env }} env
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/allure-results:/app/allure-results \
            -e BASE_URL="${{ matrix.BASE_URL }}" \
            -e HTTP_CREDENTIALS_USERNAME="${{ matrix.USERNAME }}" \
            -e HTTP_CREDENTIALS_PASSWORD="${{ matrix.PASSWORD }}" \
            playwright-tests sh -c "
              npx playwright test --project=${{ matrix.env }}:run:auth &&
              npx playwright test --project=${{ matrix.env }}:setup &&
              npx playwright test --project=${{ matrix.env }}:run:base
            "

      - name: ‚òï Set up Java for Allure
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: üì¶ Install Allure CLI
        run: npm install -g allure-commandline

      - name: üìä Generate Allure report for ${{ matrix.env }} env
        run: allure generate allure-results --clean -o allure-report-${{ matrix.env }}

      - name: üìÅ Upload Allure Report for ${{ matrix.env }} env
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.env }}
          path: allure-report-${{ matrix.env }}